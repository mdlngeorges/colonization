[
["index.html", "YOUR TITLE HERE Chapter 1 Introduction", " YOUR TITLE HERE YOUR NAMES HERE 2019-12-12 Chapter 1 Introduction "],
["data-sources.html", "Chapter 2 Data sources", " Chapter 2 Data sources This is an edit/merge test. "],
["data-transformation.html", "Chapter 3 Data transformation", " Chapter 3 Data transformation library(ggplot2) library(dplyr) library(countrycode) library(foreign) library(readxl) library(tidyr) library(tidyverse) Load the data coldata &lt;- read.csv(&quot;Data/coldata110.csv&quot;) gdpdata &lt;- read.csv(&quot;Data/UNGDP.csv&quot;) stateabs &lt;- read.csv(&quot;Data/states2016.csv&quot;) indicators &lt;- read_excel(&quot;Data/2018_all_indicators.xlsx&quot;,sheet = 1) Cleaning Colonization Data and adding GDP/HDI/Gini indicators #Clean coldata coldata_clean &lt;- coldata coldata_clean$Code &lt;- countrycode(coldata$Name,origin=&#39;country.name&#39;,destination = &#39;iso3c&#39;) ## Warning in countrycode(coldata$Name, origin = &quot;country.name&quot;, destination = &quot;iso3c&quot;): Some values were not matched unambiguously: Austria-Hungary, Baden, Bavaria, Czechoslovakia, German Democratic Rep. (East Germany), Hanover, Hesse - Darmstadt (Hesse Grand Ducal), Hesse - Kassel/Cassel (Hesse Electoral), Kosovo, Mecklenburg-Schwerin, Modena, Parma, Republic of Vietnam (South), Saxony, Tuscany, Two Sicilies, Wuerttemburg, Yemen Arab Rep. (Sanaa / North Yemen), Yemen People&#39;s Rep. (Aden / South Yemen), Zanzibar #Add in names (instead of codes of colonizing countries) stateabs &lt;- read.csv(&quot;Data/states2016.csv&quot;) stateabs &lt;- stateabs[,c(&quot;ccode&quot;, &quot;statenme&quot;)] %&gt;% distinct() coldata_clean &lt;- merge(coldata_clean, stateabs, by.x = &quot;ColRuler&quot;, by.y = &quot;ccode&quot;, all.x = TRUE) coldata_clean$ColRulerCode &lt;- countrycode(coldata_clean$statenme, origin = &quot;country.name&quot;, destination = &quot;iso3c&quot;) ## Warning in countrycode(coldata_clean$statenme, origin = &quot;country.name&quot;, : Some values were not matched unambiguously: Austria-Hungary #reorder codes cols &lt;- c(&quot;State&quot;,&quot;Name&quot;, &quot;Code&quot;, &quot;ColRuler&quot;,&quot;ColRulerCode&quot;, &quot;statenme&quot;) coldata_clean &lt;- coldata_clean[,c(cols, setdiff(names(coldata_clean), cols))] names(coldata_clean)[6] &lt;- &quot;ColRulerName&quot; levels(coldata_clean$ColRulerName) &lt;- c(levels(coldata_clean$ColRulerName), &quot;Not Colonized&quot;) coldata_clean$ColRulerName[coldata_clean$ColRuler == -9] &lt;- &quot;Not Colonized&quot; coldata_clean$ColRulerCode[coldata_clean$ColRuler == -9] &lt;- &quot;N/C&quot; #Clean up countries without given codes coldata_clean &lt;- coldata_clean[-c(8,9,11,12,13,14,15,16,17,18,20,27,28,30,31,32,89,91,132,173),] #Add in Kosovo&#39;s code manually since package didn&#39;t recognize it coldata_clean[coldata_clean$Name == &quot;Kosovo&quot;, &quot;Code&quot;] = &quot;RKS&quot; #Give Yemen part colonized by Turkey the code for Yemen coldata_clean[coldata_clean$State == 678, &quot;Code&quot;] = &quot;YEM&quot; #Change name for Vietnam for clarity levels(coldata_clean$Name)[levels(coldata_clean$Name)==&#39;Vietnam/Dem.Rep.Vietnam (North)&#39;] &lt;- &#39;Vietnam&#39; #Add codes to gdpdata2017 gdpdata$Code &lt;- countrycode(gdpdata$Country.or.Area, origin = &quot;country.name&quot;, destination = &quot;iso3c&quot;) ## Warning in countrycode(gdpdata$Country.or.Area, origin = &quot;country.name&quot;, : Some values were not matched unambiguously: Kingdom of Eswatini, Kosovo #Manually fixed unmatched values gdpdata[gdpdata$Country.or.Area == &quot;Kosovo&quot;, &quot;Code&quot;] = &quot;RKS&quot; gdpdata[gdpdata$Country.or.Area == &quot;Kingdom of Eswatini&quot;, &quot;Code&quot;] = &quot;SWZ&quot; #Create table merging coldata and gdp gdp &lt;- gdpdata[c(&quot;Code&quot;,&quot;Value&quot;)] colgdpc &lt;- merge(coldata_clean, gdp, by.x = &quot;Code&quot;, by.y = &quot;Code&quot;, all.x = TRUE) #Reorder Columns cols &lt;- c(&quot;State&quot;,&quot;Name&quot;, &quot;Code&quot;, &quot;ColRuler&quot;,&quot;ColRulerCode&quot;, &quot;ColRulerName&quot;, &quot;Value&quot;) colgdpc &lt;- colgdpc[,c(cols, setdiff(names(colgdpc), cols))] #Rename value column as GDPpc2017 names(colgdpc)[7] &lt;- &quot;GDPpc17&quot; #Get human capital index data and join #Source: http://hdr.undp.org/en/content/human-development-index-hdi hdi &lt;- filter(indicators, indicator_id == 137506 | indicator_id == 138806) hdi &lt;- hdi[,c(&quot;indicator_id&quot;, &quot;iso3&quot;,&quot;2017&quot;)] hdi &lt;- spread(hdi, &quot;indicator_id&quot;, &quot;2017&quot;) names(hdi)[2] &lt;- &quot;HDI17&quot; names(hdi)[3] &lt;- &quot;IHDI17&quot; colonialdata &lt;- merge(colgdpc, hdi, by.x = &quot;Code&quot;, by.y = &quot;iso3&quot;, all.x = TRUE) #Get gini coefficient data and join #Source http://hdr.undp.org/en/content/human-development-index-hdi #id of gini coefficient = 67106 gini &lt;- filter(indicators, indicator_id == 67106) gini &lt;- gini[,c(&quot;iso3&quot;,&quot;9999&quot;)] names(gini)[2] &lt;- &quot;Gini&quot; colonialdata &lt;- merge(colonialdata, gini, by.x = &quot;Code&quot;, by.y = &quot;iso3&quot;, all.x = TRUE) #Reorder columns cols &lt;- c(&quot;State&quot;,&quot;Name&quot;, &quot;Code&quot;, &quot;ColRulerName&quot;, &quot;GDPpc17&quot;, &quot;HDI17&quot;, &quot;IHDI17&quot;, &quot;Gini&quot;) colonialdata &lt;- colonialdata[,c(cols, setdiff(names(colonialdata), cols))] write.csv(colonialdata, file = &quot;Data/colonialdata.csv&quot;, row.names=FALSE) Notes: We examined and removed several countries from this dataset for a variety of reasons – most of them are countries that no longer exist. Several were either small states that ended up merging into modern day Germany and Italy. Separating them is out of the scope of this analysis. We also removed references to North and South Vietnam since they were only separate during the war and also aren’t relavant for this analysis. We removed Zanzibar, since Tanzania is included and Zanzibar is a part of Tanzania that doesn’t have it’s own iso3 code, in fact there are two different values for Tanzania in the GDP chart, but they are both listed as Tanzania, so it seemed to make the most sense to remove Zanzibar. We removed Czechoslovakia since both Czech Republic and Slovakia are listed here and since the goal is to compare with on modern data it makes sense to look at these states as they are currently. For a similar reason we removed Austria-Hungary as well. Yemen had three variants, two of which were colonized by the UK, and the other which was colonized with Turkey. We removed one of the UK variants, and gave the Yemen colonized by Turkey the countrycode for modern day Yemen. We felt that without deep knowledge of the political history of Yemen, this was the best choice we could make for the sake of investigating impact of colonialism by colonizing country. Get and clean Angus Maddison’s data #Source: https://www.rug.nl/ggdc/historicaldevelopment/maddison/releases/maddison-project-database-2018 #Get revised Maddison data Mad &lt;- read_excel(&quot;Data/mpd2018.xlsx&quot;,sheet = 2) write.csv(Mad, file = &quot;Data/Maddison.csv&quot;, row.names=FALSE) #Source: http://www.ggdc.net/maddison/oriindex.htm #Get and clean up Maddison&#39;s original data on GDP MadO &lt;- read_excel(&quot;Data/mpdorig.xls&quot;, sheet = 3, skip = 2) ## New names: ## * `` -&gt; ...1 ## * `` -&gt; ...182 names(MadO)[1] &lt;- &quot;year&quot; MadO &lt;- MadO[rowSums(is.na(MadO)) != ncol(MadO), ] write.csv(MadO, file = &quot;Data/MaddisonGDP.csv&quot;, row.names=FALSE) #Get and clean Maddison data for England (We merged data from England and the UK since information was available for England for a longer period) MadEng &lt;- read_excel(&quot;Data/mpd2018.xlsx&quot;, skip = 1, sheet = 8) England &lt;- merge( filter(Mad, countrycode == &quot;GBR&quot;)[,c(&quot;year&quot;, &quot;cgdppc&quot;, &quot;rgdpnapc&quot;)], MadEng[,c(&quot;year&quot;, &quot;cgdppc_England&quot;, &quot;rgdpnapc_England&quot;)], by.x = &quot;year&quot;, by.y = &quot;year&quot;, all = TRUE) England &lt;- mutate(England, cgdp = ifelse(is.na(cgdppc), cgdppc_England, cgdppc )) England &lt;- mutate(England, rgdp = ifelse(is.na(rgdpnapc), rgdpnapc_England, rgdpnapc )) write.csv(England, file = &quot;Data/EnglandGDPpc.csv&quot;, row.names=FALSE) The original Maddison dataset is the latest version from his original website, which included raw GDP rather than only per capita, it also went back a bit further. The other Maddison dataset comes from a project has been developing Maddison’s work since his death. These numbers are more recent/probably account for more of the historical aspects. The links to the sources provide detailed documentation/explanation of the changes and significance. For the England data, information on the UK began around 1700, but there was data for England starting from 1200. I created an England dataset with a coloumn for both rgdpnapc and cgdppc which merged the information, if data existed for the UK it has that, otherwise it has data for England if it exists. It seemed a reasonable way to look at the change of GDP overtime in England/UK especially given that it’s per capita, so an increase in population from encompassing more area would be accounted for. "],
["missing-values.html", "Chapter 4 Missing values", " Chapter 4 Missing values "],
["results.html", "Chapter 5 Results", " Chapter 5 Results "],
["interactive-component.html", "Chapter 6 Interactive component", " Chapter 6 Interactive component "],
["conclusion.html", "Chapter 7 Conclusion", " Chapter 7 Conclusion "]
]
